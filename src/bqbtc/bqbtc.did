type Result = variant { Ok : nat; Err : TxError };
type Result_1 = variant { Ok; Err : text };
type TokenMetadata = record {
  decimals : nat8;
  owner : principal;
  logo : text;
  name : text;
  cover_address : opt principal;
  pool_address : opt principal;
  total_supply : nat;
  symbol : text;
};
type TxError = variant {
  InsufficientAllowance;
  InsufficientBalance;
  ErrorOperationStyle;
  Unauthorized;
  LedgerTrap;
  ErrorTo;
  Other;
  BlockUsed;
  AmountTooSmall;
};
service : (text, text, text, nat8, nat, principal) -> {
  balance_of : (principal) -> (nat) query;
  burn : (principal, nat) -> (Result);
  get_metadata : () -> (TokenMetadata) query;
  mint : (principal, nat) -> (Result);
  set_pool_and_cover : (principal, principal) -> (Result_1);
  transfer : (principal, nat) -> (Result);
}
